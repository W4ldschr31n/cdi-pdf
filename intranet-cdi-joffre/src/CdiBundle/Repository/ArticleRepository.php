<?php

namespace CdiBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * ArticleRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ArticleRepository extends EntityRepository
{
    /**
     * Méthode de recherche
     */
    public function recherche(array $recherche){
        $queryBuilder = $this->createQueryBuilder('a');
        
        // Gestion du premier champs de recherche
        if(is_array($recherche[0])){
            $type = $recherche[0][0];
            $valeur = $recherche[0][1];
    
            switch($type){
                case "tousChamps":
                    $queryBuilder->select('a');
                    $queryBuilder->where('a.titre LIKE :valeur OR a.resume LIKE :valeur');
                    $queryBuilder->setParameter('valeur', "%".$valeur."%");
                    break;
                case "titre":
                    $queryBuilder->select('a');
                    $queryBuilder->where('a.titre LIKE :valeur');
                    $queryBuilder->setParameter('valeur', "%".$valeur."%");
                    break;
                case "periodique":
                    $queryBuilder->select(['a', 'p']);
                    $queryBuilder->leftJoin("a.periodique", "p");
                    $queryBuilder->where('p.nom LIKE :valeur');
                    $queryBuilder->setParameter('valeur', "%".$valeur."%");
                    break;
                case "auteur":
                    $auteur = split(" ", $valeur, 2);
                    
                    // Si on a eu une saisie prenom + nom où nom + prenom.
                    if(count($auteur) >= 2){
                        $queryBuilder->select(['a', 'au']);
                        $queryBuilder->leftJoin("a.auteur", "au");
                        $queryBuilder->where('(au.prenom LIKE :prenom AND au.nom LIKE :nom) OR (au.prenom LIKE :nom AND au.nom LIKE :prenom)');
                        $queryBuilder->setParameter('prenom', "%".$auteur[0]."%");
                        $queryBuilder->setParameter('nom', "%".$auteur[1]."%"); 
                    }
                    
                    // Si on a eu une saisie prenom où nom seulement.
                    else if(count($auteur) == 1){
                        $queryBuilder->select(['a', 'au']);
                        $queryBuilder->leftJoin("a.auteur", "au");
                        $queryBuilder->where('(au.prenom LIKE :auteur OR au.nom LIKE :auteur)');
                        $queryBuilder->setParameter('auteur', "%".$auteur[0]."%");
                    }
                    break;
            }
        }
        
        // Gestion du deuxième champs de recherche
        if(isset($recherche[1]) && isset($recherche[2]) && is_array($recherche[1]) && is_string($recherche[2])){
            $type = $recherche[1][0];
            $valeur = $recherche[1][1];
            $operateur = $recherche[2];
            
            switch($type){
                case "tousChamps":
                    if($operateur == "et")
                        $queryBuilder->andWhere('a.titre LIKE :valeur2 OR a.resume LIKE :valeur2');
                    else if($operateur == "ou")
                        $queryBuilder->orWhere('a.titre LIKE :valeur2 OR a.resume LIKE :valeur2');
                    else if($operateur == "sauf")
                        $queryBuilder->andWhere('NOT (a.titre LIKE :valeur2 OR a.resume LIKE :valeur2)');
                    $queryBuilder->setParameter('valeur2', "%".$valeur."%");
                    break;
                case "titre":
                    if($operateur == "et")
                        $queryBuilder->andWhere('a.titre LIKE :titre2');
                    else if($operateur == "ou")
                        $queryBuilder->orWhere('a.titre LIKE :titre2');
                    else if($operateur == "sauf")
                        $queryBuilder->andWhere('NOT a.titre LIKE :titre2');
                    $queryBuilder->setParameter('titre2', "%".$valeur."%");
                    break;
                case "periodique":
                   if($recherche[0][0] != "periodique"){
                        $queryBuilder->select(['a', 'p']);
                        $queryBuilder->leftJoin("a.periodique", "p");
                   }
                    
                    if($operateur == "et")
                        $queryBuilder->andWhere('p.nom LIKE :periodique2');
                    else if($operateur == "ou")
                        $queryBuilder->orWhere('p.nom LIKE :periodique2');
                    else if($operateur == "sauf")
                        $queryBuilder->andWhere('NOT p.nom LIKE :periodique2');
                    
                    $queryBuilder->setParameter('periodique2', "%".$valeur."%");
                    break;
                case "auteur":
                    if($recherche[0][0] != "auteur"){
                        $queryBuilder->select(['a', 'au']);
                        $queryBuilder->leftJoin("a.auteur", "au");
                   }
                   
                   $auteur = split(" ", $valeur, 2);
                    
                    // Si on a eu une saisie prenom + nom où nom + prenom.
                    if(count($auteur) >= 2){
                        if($operateur == "et")
                            $queryBuilder->andWhere('(au.prenom LIKE :prenom2 AND au.nom LIKE :nom2) OR (au.prenom LIKE :nom2 AND au.nom LIKE :prenom2)');
                        else if($operateur == "ou")
                            $queryBuilder->orWhere('(au.prenom LIKE :prenom2 AND au.nom LIKE :nom2) OR (au.prenom LIKE :nom2 AND au.nom LIKE :prenom2)');
                        else if($operateur == "sauf")
                            $queryBuilder->andWhere('NOT (au.prenom LIKE :prenom2 AND au.nom LIKE :nom2) OR (au.prenom LIKE :nom2 AND au.nom LIKE :prenom2)');

                        $queryBuilder->setParameter('prenom2', "%".$auteur[0]."%");
                        $queryBuilder->setParameter('nom2', "%".$auteur[1]."%"); 
                    }
                    
                     // Si on a eu une saisie prenom où nom seulement.
                    else if(count($auteur) == 1){
                        if($operateur == "et")
                            $queryBuilder->andWhere('(au.prenom LIKE :auteur2 OR au.nom LIKE :auteur2)');
                        else if($operateur == "ou")
                            $queryBuilder->orWhere('(au.prenom LIKE :auteur2 OR au.nom LIKE :auteur2)');
                        else if($operateur == "sauf")
                            $queryBuilder->andWhere('NOT (au.prenom LIKE :auteur2 OR au.nom LIKE :auteur2)');
                            
                        $queryBuilder->setParameter('auteur2', "%".$auteur[0]."%");
                    }
                    break;
            }
        }
        
        $res = $queryBuilder->getQuery()->getResult();
        return $res;
    }

    public function count(){
        return $this->createQueryBuilder('a')->select('COUNT(a)')->getQuery()->getSingleScalarResult();
    }

    public function getArticlesFromPage($page, $nbArticlesParPage = 20){
        // Gestion première page
        if($page == null)
            $page = 1;

        // Récupération et calcul des infos
        $count = $this->count();
        $premierArticle = ($page-1) * $nbArticlesParPage;

        // Vérification
        if($premierArticle > $count || $premierArticle < 0)
            return false;


        $queryBuilder = $this->createQueryBuilder('a');
        $queryBuilder->setMaxResults($nbArticlesParPage)->setFirstResult($premierArticle)->orderBy('a.dateParution', 'DESC');

        $res = $queryBuilder->getQuery()->getResult();
        return $res;
    }
}
